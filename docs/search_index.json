[["rとrstudioのインストール.html", "Chapter 2 RとRStudioのインストール 2.1 Rが使えるパソコン 2.2 インストール方法 2.3 RStudioの画面 2.4 ヘルプの参照 2.5 チュートリアルの実行 2.6 パッケージのインストール", " Chapter 2 RとRStudioのインストール 2.1 Rが使えるパソコン Rはオープン・ソースで開発されており，Windows，Mac，Linuxのいずれでも利用可能。Rそのものは性能の低いマシンでも十分に動作する(ただし，分析するデータの規模や用いる分析手法によってはある程度高性能なパソコンが必要になるかもしれない)。また，RStudioは統合開発環境(Rのコードを編集したり実行したりできるだけでなく，プロジェクトの管理などもできる)。Rを使う上で必須と言えるソフトウェア。デスクトップアプリケーションと，Webブラウザをインターフェイスとして利用するRStudio Serverの2種類がある。どちらも基本的には無料で使える。 Rを使うのであれば，個人的にはRStudio ServerがセットアップされたDockerイメージを用いるのがおすすめ。セットアップのコストが最小限ですむ上に，OSに関係なく使うことができる。複数のパソコン(OSが違っていてもOk)を使う場合にも，簡単に同じ環境を構築できる。 Dockerを利用しないのであれば，OSはMacかLinuxがおすすめ。Windowsは，少しパソコンに詳しいのであれば問題ないと思うが，MacやLinuxにくらべてWindowsならではのトラブルが多い。ただし，WindowsにはWSL(Windows Subsystem for Linux)という仮想環境が用意されており，その上でLinuxを動かすことができる。WindowsでRを使うのであれば，WSL上のLinuxにRやRStudio Sercerをインストールして使うのがおすすめ。 まとめると，おすすめ順に DockerでRStudio Serverを使う(どのOSでも同じ環境を構築可能) Mac(もしくはLinux)にインストールして使う WindowsのWSL上にRStudio Serverをインストールして使う Windowsにインストールして使う 2.2 インストール方法 インストールの方法については高知工科大学の矢内先生のホームページに，これ以上丁寧に説明することはできないというくらいに丁寧な解説スライドが公開されている。Ubuntu，Mac，Windows版があるので，これらを参考にインストールすると良い。ただし，うまくいかなくても矢内先生に直接質問のメールを送ったりはしないこと。以下は，補足。 2.2.1 MacにHomebrewを使ってインストールする Homebrewを使うとRとRStudioをまとめて簡単にインストールできる。 HomebrewはMacのパッケージマネージャ。ソフトのインストールやアップグレードの管理が容易にできるようになる。 RとRStudioもHomebrewを使えば簡単にインストールできる。 Homebrewをインストールしていない人は，ターミナルで以下のコマンドを実行すればインストール可能(詳細は，ここを参照)。 /bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot; Homebrewがインストールできたら，ターミナルで以下のコマンドを実行することでRとRStudio，ついでにXquartzをインストールできる。 brew install --cask r rstudio xquartz 2.2.2 Dockerイメージを使う Dockerを使うと，RStudio Serverがセットアップされたコンテナを簡単に使うことができる。Docker Desktopをインストールしておけば，以下のコマンドだけでRStudio Serverが起動する。 docker run --rm -ti -e PASSWORD=yourpassword -p 8787:8787 rocker/rstudio コマンドを実行したら，ブラウザでlocalhost:8787にアクセスすればRStudio Serverにアクセスできる。ユーザー名はrstudio，パスワードはyourpassword。ただし，これはあくまでお試し用。実際に使うにはもう少し設定が必要。 LatexなどもまとめてDockerコンテナ化したものを作ったので，こちらを参考にしてほしい。 2.2.3 WSLにインストールして使う いまではDockerを使うのが一般的なので，あまりおすすめしないが，以前に書いた解説]があるので一応リンクだけ張っておく。 WSL導入メモ WSLでRStudio Server 2.3 RStudioの画面 RStudioを起動すると，細かい違いはあれ下のような画面が表示されるはず。 RStudio デフォルトでは白背景の配色になっていると思うが，コードを書くときは黒や青背景の方が見やすいので変更している。見た目を変更するには，RStudioのメニューから[Tools]&gt;[Global Options…]を選び，Appearanceで設定する。長時間の作業を行う場合には，色やフォントによって作業効率や目の疲れ方がけっこう変わってくるので，いろいろ試して自分にあった設定にしよう。 RStudioの画面は，デフォルトで4ペイン(4分割)。最初はそのまま使っても良いと思うが，画面のレイアウトは比較的自由に変えることができるので，慣れてきたら自分が使いやすいように設定しよう。 各ペインにはタブが複数配置されている。まずは，よく使うものだけ説明する。 Sourceペイン：デフォルトでは左上。何もファイルが開かれていない状態では最小化されているので，画面左上の+マークで新しいスクリプト・ファイル(R Script)を作成してみよう。 Consoleペイン：デフォルトでは左下。Rにコマンドを入力して実行する画面。 Environmentなどのペイン：デフォルトでは右上。Environmentタブには記憶されている変数やデータなどが表示される。Historyタブには実行したコマンドの履歴が表示され，選択して再度実行できる。 Filesなどのペイン：デフォルトでは右下。Filesタブには現在のディレクトリにあるファイルのリストが表示される。ファイル名をクリックすればファイルを開くことができる。RのソースコードなどやデータフレームはSourceペインで開かれる。Plotsタブはグラフが表示される場所。 Rで単発のコマンドを実行するときには，Consoleタブで行う。ただし，通常はスクリプト・ファイルにコマンドを書いて一つずつ実行していったり，いくつかのコマンドをまとめて実行したりすることが多い。Consoleでコマンドを実行した場合にも，Histroyタブからスクリプト・ファイルへと実行したコマンドを貼り付けておくと良い。そうすれば，いつでも作業を最初から再現できる。研究では，結果を再現できることが極めて重要。再現性を担保できることは，ExcelではなくRを使うメリットの一つ。 スクリプト・ファイルに書かれたコマンドを実行する場合，Ctrlを押しながらEnterを押す。範囲が選択されていない場合には，カーソルのある行(コマンドが複数行にまたがっていてもOk)が実行される。範囲を選択してCtrl+Enterを押せば，選択された範囲のコードが順に実行される。 2.4 ヘルプの参照 Rのコマンド・ヘルプは?のあとにコマンド名を入力すれば参照できる。ヘルプは，Helpタブ(デフォルトでは右下のペイン)に表示される。知らないコマンドが出てきたらまずはヘルプを読む。英語が苦手でもDeepLで翻訳すればだいたい読める。 たとえば，table関数のヘルプを読みたければ， ?table 2.5 チュートリアルの実行 右上のペインにTutorialというタブがあり，そこからRのチュートリアル・レッスンを受けられる。チュートリアルを実行するためのパッケージをインストールするのに時間がかかるが，とりあえず一通り実行してみると，Rの使い方についてのイメージを持つことができるかもしれない。 2.6 パッケージのインストール Rは本体にパッケージを追加することで，機能を拡張することができる。パッケージをインストールするには，install.packages関数を用いる。とくに，tidyverseパッケージは必ず利用することになるので，インストールしておこう。 install.packages(&quot;tidyverse&quot;) MacやUbuntuの場合，もしかしたら”openssl”がないみたいなエラーが出るかもしれない。そのときは，opensslをインストールしてから，再度実行する。 opensslはMac(Homebrew)だと， brew install openssl Ubuntuだと， sudo apt install openssl でインストールできる。 インストールしたパッケージは毎回読み込む必要がある。パッケージを読み込むにはlibrary関数を使う。 library(tidyverse) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
